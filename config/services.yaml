# This file is the entry point to configure your own services.
# Files in the packages/ subdirectory configure your dependencies.

# Put parameters here that don't need to change on each machine where the app is deployed
# https://symfony.com/doc/current/best_practices/configuration.html#application-related-configuration
parameters:
    locale: 'ru'
    fromEmail: noreply@supershop.com
    fromName: Supershop
    adminEmail: admin@supershop.com

services:
    # default configuration for services in *this* file
    _defaults:
        autowire: true      # Automatically injects dependencies in your services.
        autoconfigure: true # Automatically registers your services as commands, event subscribers, etc.

    _instanceof:
        Knp\Menu\Provider\MenuProviderInterface:
            tags: ['knp_menu.provider']

    # makes classes in src/ available to be used as services
    # this creates a service per class whose id is the fully-qualified class name
    App\:
        resource: '../src/*'
        exclude: '../src/{DependencyInjection,Entity,Migrations,Tests,Kernel.php}'

    # controllers are imported separately to make sure services can be injected
    # as action arguments even if you don't extend any base controller class
    App\Controller\:
        resource: '../src/Controller'
        tags: ['controller.service_arguments']


    # add more service definitions when explicit configuration is needed
    # please note that last definitions always *replace* previous ones

    App\Admin\CategoryAdmin:
        arguments: [~, App\Entity\Category, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Категории }

    App\Admin\ProductAdmin:
        arguments: [~, App\Entity\Product, ~, '@liip_imagine.cache.manager']
        tags:
            - { name: sonata.admin, manager_type: orm, label: Товары }

    App\Admin\FeedbackRequestAdmin:
        arguments: [~, App\Entity\FeedbackRequest, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Обратная связь }

    App\Admin\OrderAdmin:
        arguments: [~, App\Entity\Order, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, label: Заказы }
        calls:
            - ['addChild', ['@App\Admin\OrderItemAdmin']]

    App\Admin\OrderItemAdmin:
        arguments: [~, App\Entity\OrderItem, ~]
        tags:
            - { name: sonata.admin, manager_type: orm, show_in_dashboard: false}
